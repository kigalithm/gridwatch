"""Initial migration: outages, locations, posts

Revision ID: 646ea74e0967
Revises:
Create Date: 2025-07-18 15:55:43.166945

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = "646ea74e0967"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "locations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("level", sa.String(), nullable=True),
        sa.Column("parent_province", sa.String(), nullable=True),
        sa.Column("parent_district", sa.String(), nullable=True),
        sa.Column("parent_sector", sa.String(), nullable=True),
        sa.Column("parent_cell", sa.String(), nullable=True),
        sa.Column(
            "coordinates",
            geoalchemy2.types.Geometry(
                geometry_type="POINT", from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column(
            "boundary",
            geoalchemy2.types.Geometry(
                geometry_type="POLYGON", from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column("province_code", sa.String(), nullable=True),
        sa.Column("district_code", sa.String(), nullable=True),
        sa.Column("sector_code", sa.String(), nullable=True),
        sa.Column("cell_code", sa.String(), nullable=True),
        sa.Column("village_code", sa.String(), nullable=True),
        sa.Column("population", sa.Integer(), nullable=True),
        sa.Column("area_km2", sa.Float(), nullable=True),
        sa.Column("source", sa.String(), nullable=True),
        sa.Column("source_id", sa.String(), nullable=True),
        sa.Column(
            "location_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_location_hierarchy",
        "locations",
        ["parent_province", "parent_district", "parent_sector"],
        unique=False,
    )
    op.create_index(
        "idx_location_name_level", "locations", ["name", "level"], unique=False
    )
    op.create_index(
        "idx_locations_boundary",
        "locations",
        ["boundary"],
        unique=False,
        postgresql_using="gist",
    )
    op.create_index(
        "idx_locations_coordinates",
        "locations",
        ["coordinates"],
        unique=False,
        postgresql_using="gist",
    )
    op.create_index(op.f("ix_locations_name"), "locations", ["name"], unique=False)
    op.create_index(
        op.f("ix_locations_parent_district"),
        "locations",
        ["parent_district"],
        unique=False,
    )
    op.create_index(
        op.f("ix_locations_parent_province"),
        "locations",
        ["parent_province"],
        unique=False,
    )
    op.create_table(
        "posts",
        sa.Column("tweet_id", sa.String(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("author_id", sa.String(), nullable=True),
        sa.Column("is_mention", sa.Boolean(), nullable=True),
        sa.Column("is_reply", sa.Boolean(), nullable=True),
        sa.Column("in_reply_to_tweet_id", sa.String(), nullable=True),
        sa.Column("tweet_created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("fetched_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("retweet_count", sa.Integer(), nullable=True),
        sa.Column("like_count", sa.Integer(), nullable=True),
        sa.Column("reply_count", sa.Integer(), nullable=True),
        sa.Column("quote_count", sa.Integer(), nullable=True),
        sa.Column("processed", sa.Boolean(), nullable=True),
        sa.Column("processing_error", sa.Text(), nullable=True),
        sa.Column("raw_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_posts_author_id"), "posts", ["author_id"], unique=False)
    op.create_index(op.f("ix_posts_tweet_id"), "posts", ["tweet_id"], unique=True)
    op.create_table(
        "outages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tweet_id", sa.String(), nullable=False),
        sa.Column("tweet_text", sa.String(), nullable=False),
        sa.Column("areas", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("location_confidence", sa.Float(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "RESOLVED", "SCHEDULED", name="outagestatus"),
            nullable=False,
        ),
        sa.Column(
            "outage_type",
            sa.Enum("OUTAGE", "RESTORATION", "MAINTENANCE", name="outagetype"),
            nullable=False,
        ),
        sa.Column("reported_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("estimated_start", sa.String(), nullable=True),
        sa.Column("estimated_end", sa.DateTime(timezone=True), nullable=True),
        sa.Column("resolved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cause", sa.String(), nullable=True),
        sa.Column(
            "coordinates",
            sa.ARRAY(
                geoalchemy2.types.Geometry(
                    geometry_type="POINT",
                    srid=4326,
                    from_text="ST_GeomFromEWKT",
                    name="geometry",
                )
            ),
            nullable=True,
        ),
        sa.Column(
            "affected_areas",
            sa.ARRAY(
                geoalchemy2.types.Geometry(
                    geometry_type="POLYGON",
                    from_text="ST_GeomFromEWKT",
                    name="geometry",
                )
            ),
            nullable=True,
        ),
        sa.Column("embedding", Vector(dim=384), nullable=False),
        sa.Column("source_type", sa.String(), nullable=True),
        sa.Column("source_credibility", sa.Float(), nullable=True),
        sa.Column("author_id", sa.String(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["locations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("outages")
    op.drop_index(op.f("ix_posts_tweet_id"), table_name="posts")
    op.drop_index(op.f("ix_posts_author_id"), table_name="posts")
    op.drop_table("posts")
    op.drop_index(op.f("ix_locations_parent_province"), table_name="locations")
    op.drop_index(op.f("ix_locations_parent_district"), table_name="locations")
    op.drop_index(op.f("ix_locations_name"), table_name="locations")
    op.drop_index(
        "idx_locations_coordinates", table_name="locations", postgresql_using="gist"
    )
    op.drop_index(
        "idx_locations_boundary", table_name="locations", postgresql_using="gist"
    )
    op.drop_index("idx_location_name_level", table_name="locations")
    op.drop_index("idx_location_hierarchy", table_name="locations")
    op.drop_table("locations")
    # ### end Alembic commands ###
